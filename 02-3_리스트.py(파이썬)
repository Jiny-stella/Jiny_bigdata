# 02-3_리스트.py

#list : mutable 자료형, 시퀀스(순서형),가장 유용한 자료형


a = [1,2,3,4,5,6,7,8,9]

print(a)
print(type(a))  #<class 'list'>

# a = [] #변수를 따로따로 다 만드는것이 아니고 빈 리스트 만들기

#인덱싱
print(a[0],a[1],a[2],a[3], a[8])
print(a[-1],a[-2], a[-3], a[-4])
a[0] =10  #mutable 자료형이므로 요소의 변경이 가능하다
print(a)


#슬라이싱
print(a[1:5])
print(a[1:])
print(a[ :5])
print(a[:-1])

a[1:5] = [20,30,40,50]
print(a)

#a[시작옵셋:(끝옵셋 +1):간격(step)]

print(a[0:8:2]) #홀수만 출력
print(a[0:8:-1]) #[]
print(a[::-1])  #[9,8,7,6,5,4,3,2,1]
print(a[8::-1]) #[9,8,7,6,5,4,3,2,1]
print(a[8:0:-1] )#[9,8,7,6,5,4,3,2]

a[::2] = [10,30,50,70,90]
print(a)
print(a[::2])  #홀수만 출력

l = list(range(10))
print(1)
l = list(range(1,10))
print(1)  #[1,2,3,4,5,6,7,8, 9]



l = list(range(1,10,2))
print(1)  #[1,3,5,7,9]

#sum()함수 : 시퀀스형 데이터의 총합을 구한다

a = [1,2,3,4,5,6,7,8,9]
print(sum(a))
print(max(a))
print(min(a))

#리스트연산
a = [1,2,3]
b = [3,4,5]
c = a + b
print(c)
d = a *3
print(d) #[1, 2, 3, 1, 2, 3, 1, 2, 3]

print(len(a))

print(3 in a )   # 3은 a라는 리스트의 요소 인가? 묻는거 #TRUE
print(0 in a)    #FALSE

del b[0]  # [몇번째] 제거 하겠다 ->  [4, 5]
print(b)

a = [1,2,3]
a.append(4)
print(a)
# print(ret)  #None   ret = return 값     #다시?

a.append([5,6])
print(a)

a.insert(1,1.5)
print(a)

a.remove(1.5)
print(a)

a.remove([5,6])
print(a)

a.pop() # list의 마지막 요소를 제거
print(a )   #[1, 2, 3]


#

a = [1,5,2,4,3]
a.sort()
print(a)   #[1, 2, 3, 4, 5]

a.sort(reverse  = True)  #역순으로 정렬

print(a.index(3))
print(a.append(5))
# print(a.index(7))   #valueerror : 7 is not in list
print(a.count(5))
# a.pop()
a.reverse()  #순서를 반대로
print(a)

a.extend([4,5])
print(a)
b = [6,7]
a.extend(b)
print(b)

#확장 슬라이싱 : 시작과 끝값이 없고 step값 만 지정
c = [0,1,2,3,4,5,6,7,8,9,10]
print(c[::2])


#중첩(Nested) 리스트: 리스트 안에 또 다른 리스트가 포함

a=[1,2,3,4,[5,6,7]]     #2중 리스트
print(a[4])   #[5,6,7]
print(a[4][1])   #6

a = [1,2,3,4,[5,6,7,[8,9,10]]]   #3중 리스트
print(a[4])      #[5, 6, 7, [8, 9, 10]]
print(a[4][3])   #[8, 9, 10]
print(a[4][3][1])  #9

a = [7,8,9]
b = [1,2,3,a]  # 이중리스트
c = [1,2,3,b]
print(b)
print(c)

a = [10,22,23]   #a의 개체가 바뀐거
print(b)
print(c)

a[0] = 10    # a의 요소가 바뀐거
print(b)
print(c)


# 리스트 내장(list comprehension)

a = [k for k in range(10)]
print(a)

a = [1,2,3,4,5,6,7]
b = [k for k in a if k > 4]   #[5,6,7]
print(b)
c = [k for k in a if k % 3 ==0]   #[3,6]
print(c)
d = [k for k in a if k % 3 !=0]   #[1, 2, 4, 5, 7]
print(d)

#리스트 내장을 이용한 데이터의 조합 리스트 생성
seq1 = 'abc' #문자열
seq2 = (1,2,3) #튜플

l = [(x,y) for x in seq1 for y in seq2]
print(l)   #[('a', 1), ('a', 2), ('a', 3), ('b', 1), ('b', 2), ('b', 3), ('c', 1), ('c', 2), ('c', 3)]


# for 문
total    = 0
# for k in range(11) : # from 0 to 10, step =1
# for k in range(1,11) : # from 0 to 10, step =1
# for k in range(1,11,2) : # from 0 to 10, step =2

total = 0 #0으로 초기화
for k in range(0,11,2):
    print(k)
    total = total + k
    print('total:', total)


a = [10,20,30,40,50,60,70,80,90]
print(a[0], a[2], a[4], a[6], a[8])    # 10 30 50 70 90
print(a[::2])        #[10, 30, 50, 70, 90]

print()
for k in range(9):
    print(a[k], end = ' ' )   #10 20 30 40 50 60 70 80 90

print()
for k in range(0,9,2):
    print(a[k], end= ' ')    #10 20 30 40 50 60 70 80 90



